input AMPLIFY { globalAuthRule: AuthRule = { allow: public } }

type UUser @model {
  id: ID!
  password: String!
  email: String!
  firstName: String!
  lastName: String!
  profilePictureUrl: String
  coverPictureUrl: String
  projects: [UProject] @hasMany
  friends: [String] 
  posts: [UPost] @hasMany
  sponsors: [USponsor] @hasMany
  notificationsSent: [UNotification] @hasMany
  notificationsReceived: [UNotification] @hasMany
  # eventsAttending: [UEvent] @hasMany
  # eventsNotAtttending: [UEvent] @hasMany
  bio: String
  city: String
  state: String
  admin: Boolean
}

type UProject @model @auth(rules: [{ allow: public }]){
  id: ID!
  name: String!
  privacy: String!
  bio: String
  description: String!
  city: String
  state: String
  hoursSpent: Float
  leader: String
  date: String
  members: [String]
  posts: [String]
  projectPicture: String!
  sponsors: [USponsor] @hasMany
  notifications: [UNotification] @hasMany
  isCompleted: Boolean!
  events: [UEvent] @hasMany
  zipCode: String
}

type UEvent @model @auth(rules: [{ allow: public }]){
  id: ID!
  name: String!
  streetAddress: String
  state: String
  city: String
  zipCode: String
  details: String
  date: String
  time: String
  membersAttending: [String]
  membersNotAttending: [String]
  # membersCheckedIn: [String]
  owner: UUser @hasOne
  leader: UUser @hasOne
  project: UProject! @belongsTo
  eventPicture: String
  checkInCode: String  #4 digits
}

type UEventCheckIn @model @auth (rules: [{ allow: public }]){
  id: ID! 
  event: UEvent! @hasOne
  user: UUser! @hasOne
  datetime: String!
  details: String
}

type USponsor @model @auth(rules: [{ allow: public }]){
  id: ID!
  amount: Float!
  user: UUser @belongsTo
  project: UProject @belongsTo
}

type UPost @model @auth(rules: [{ allow: public }]) {
  id: ID!
  user: UUser! @belongsTo
  content: String!
  date: String!
  comments: [UComment] @hasMany
  # project: UProject @belongsTo
}

type UComment @model @auth(rules: [{ allow: public }]){
  id: ID!
  content: String!
  likes: Int!
  comments: [UComment] @hasMany
  post: UPost @belongsTo
}

# type UOrganization @model @auth(rules: [{ allow: public }]){
#   id: ID!
#   name: String!

#   admin: [UUser]
#   members: [UUser]
# }

# type UHoursReporting


type UNotification @model {
  id: ID!
  receiver: UUser! @belongsTo
  sender: UUser! @belongsTo
  project: UProject @belongsTo
  date: String!
  message: String!
  status: String!
  # INCOMPLETE, APPROVED, DENIED, COMPLETE, ADMIN
}

type UGroup @model {
  id: ID!
  name: String!
  privacy: String!
  bio: String0
  description: String!
  city: String
  state: String
  leader: String
  date: String
  projects: [String]
  members: [String]
  posts: [String]
  groupPicture: String!
  zipCode: String
}

type UGroupUser @model {
  id: ID!
  isAdmin: Boolean
  approvedByGroup: Boolean
  approvedByUser: Boolean
}